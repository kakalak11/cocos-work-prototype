{"version":3,"sources":["nodeScript.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","_index","ctor","scriptName","_onMove","data","node","emit","_move","log","onLoad","on","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQ;AADA,KAHP;;AAOLC,QAPK,kBAOE;AACH,aAAKC,UAAL,GAAkB,MAAlB;AACH,KATI;;;AAWL;;AAEAC,aAAS,iBAAUC,IAAV,EAAgB;AACrB;AACA,aAAKC,IAAL,CAAUC,IAAV,CAAe,MAAf,EAAuB,KAAKN,MAA5B;AACH,KAhBI;;AAkBLO,WAAO,eAAUH,IAAV,EAAgB;AACnB,YAAIA,SAAS,KAAKJ,MAAlB,EAA0B;AACtBL,eAAGa,GAAH,CAAO,oCAAP;AACA;AACH;AACDb,WAAGa,GAAH,CAAO,mCAAP,EAA4C,KAAKR,MAAjD;AACAL,WAAGa,GAAH,+BAAmCJ,IAAnC;AACH,KAzBI;;AA2BLK,UA3BK,oBA2BI;AACLd,WAAGa,GAAH,CAAO,mBAAP;AACA,aAAKH,IAAL,CAAUK,EAAV,CAAa,MAAb,EAAqB,KAAKH,KAA1B,EAAiC,IAAjC;AACH,KA9BI;AAgCLI,SAhCK,mBAgCG,CAEP;AAlCI;;AAoCL;AApCJ","file":"nodeScript.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst Emitter = require('mEmitter');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        _index: null,\n    },\n\n    ctor() {\n        this.scriptName = 'node';\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    _onMove: function (data) {\n        // cc.log('this listens to the same emitter channel');\n        this.node.emit('move', this._index);\n    },\n\n    _move: function (data) {\n        if (data === this._index) {\n            cc.log('this was called from the same node');\n            return;\n        }\n        cc.log('this was called from the cc.Event', this._index);\n        cc.log(`this is the caller data: ${data}`);\n    },\n\n    onLoad() {\n        cc.log('node instantiated');\n        this.node.on('move', this._move, this);\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});\n"]}